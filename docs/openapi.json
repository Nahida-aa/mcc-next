{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "description": "\n- [去示例界面](https://mcc.Nahida-aa.us.kg)\n- [去 Scalar UI](/)\n- [去 Swagger UI](/docs)\n- [去 ReDoc](/redoc)\n",
    "version": "0.1.0"
  },
  "paths": {
    "/api/py/token": {
      "post": {
        "summary": "Get Scopes Token",
        "description": "OAuth2 compatible token with scopes : 获取访问令牌, 包含权限范围",
        "operationId": "get_scopes_token_api_py_token_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_get_scopes_token_api_py_token_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/py/refresh-token": {
      "post": {
        "summary": "Refresh Token",
        "description": "Refresh access token using refresh token : 刷新访问令牌",
        "operationId": "refresh_token_api_py_refresh_token_post",
        "parameters": [
          {
            "name": "refresh_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Refresh Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/py/auth/csrf": {
      "get": {
        "summary": "Get Csrf Token",
        "description": "Generate and return a CSRF token",
        "operationId": "get_csrf_token_api_py_auth_csrf_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/py/auth/signin": {
      "post": {
        "summary": "Signin",
        "description": "User sign in, get an access token and refresh token",
        "operationId": "signin_api_py_auth_signin_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/JsonBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenWithUser"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/py/auth/signout": {
      "post": {
        "summary": "Signout",
        "operationId": "signout_api_py_auth_signout_post",
        "parameters": [
          {
            "name": "csrf_token",
            "in": "cookie",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Csrf Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SignOutBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/py/register": {
      "post": {
        "summary": "Register",
        "operationId": "register_api_py_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenWithUser"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/py/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Read User",
        "operationId": "read_user_api_py_user_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          },
          {
            "name": "refresh_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Refresh Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Update User",
        "description": "Update user",
        "operationId": "update_user_api_py_user_patch",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          },
          {
            "name": "refresh_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Refresh Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/py/user/{name}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Read User By Name",
        "operationId": "read_user_by_name_api_py_user__name__get",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/py/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Read Users",
        "operationId": "read_users_api_py_users_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create User",
        "operationId": "create_user_api_py_users_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/py/user/password": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Change Password",
        "operationId": "change_password_api_py_user_password_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          },
          {
            "name": "refresh_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Refresh Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/py/user/idcard": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Update User Idcard",
        "operationId": "update_user_idcard_api_py_user_idcard_patch",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          },
          {
            "name": "refresh_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Refresh Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IDCardInfoUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IDCardInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/py/user/platform": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Update User Platform",
        "operationId": "update_user_platform_api_py_user_platform_patch",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          },
          {
            "name": "refresh_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Refresh Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPlatformInfoUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPlatformInfoPublic"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/py/{target_name}/followers": {
      "get": {
        "tags": [
          "follow"
        ],
        "summary": "返回 name 的粉丝列表, 携带关注消息",
        "description": "- 需要携带 access_token\n- 粉丝列表: 目前不包括团队,因为团队只能被关注\n- is_following: 表示当前用户是否关注了目标用户\n- is_followed: 表示目标用户是否关注了当前用户",
        "operationId": "read_target_name_followers_api_py__target_name__followers_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Target Name"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          },
          {
            "name": "refresh_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Refresh Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOrTeamFollowMetaList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/py/{target_name}/following": {
      "get": {
        "tags": [
          "follow"
        ],
        "summary": "返回 name 的关注列表, 携带关注消息",
        "description": "- 需要携带 access_token\n- 关注列表: 目前不包括团队,因为团队只能被关注\n- is_following: 表示当前用户是否关注了目标用户\n- is_followed: 表示目标用户是否关注了当前用户",
        "operationId": "read_target_name_following_api_py__target_name__following_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Target Name"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          },
          {
            "name": "refresh_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Refresh Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOrTeamFollowMetaList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/py/user/is_following/{target_user_id}": {
      "get": {
        "tags": [
          "follow"
        ],
        "summary": "Is Following User",
        "operationId": "is_following_user_api_py_user_is_following__target_user_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Target User Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          },
          {
            "name": "refresh_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Refresh Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/LinkUserFollow"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Is Following User Api Py User Is Following  Target User Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/py/user/follow/{target_user_id}": {
      "post": {
        "tags": [
          "follow"
        ],
        "summary": "Follow User",
        "description": "关注一个用户, with token and target_user_id",
        "operationId": "follow_user_api_py_user_follow__target_user_id__post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Target User Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          },
          {
            "name": "refresh_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Refresh Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "follow"
        ],
        "summary": "Unfollow User",
        "operationId": "unfollow_user_api_py_user_follow__target_user_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "target_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Target User Id"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          },
          {
            "name": "refresh_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Refresh Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/py/{name}/follow": {
      "post": {
        "tags": [
          "follow"
        ],
        "summary": "关注 name, 需要携带 access_token, 响应: 新的目标用户的信息",
        "description": "TODO:\n- 刚刚发现返回了一个 空 {}",
        "operationId": "follow_user_by_name_api_py__name__follow_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "access_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Access Token"
            }
          },
          {
            "name": "refresh_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Refresh Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_get_scopes_token_api_py_token_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "password"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_get_scopes_token_api_py_token_post"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IDCardInfo": {
        "properties": {
          "id_card_number": {
            "type": "string",
            "title": "Id Card Number"
          },
          "id_card_holder": {
            "type": "string",
            "title": "Id Card Holder",
            "default": "self"
          },
          "is_real_name": {
            "type": "boolean",
            "title": "Is Real Name",
            "default": false
          },
          "front_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Front Image Url"
          },
          "back_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Back Image Url"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "id_card_number"
        ],
        "title": "IDCardInfo"
      },
      "IDCardInfoBase": {
        "properties": {
          "id_card_number": {
            "type": "string",
            "title": "Id Card Number"
          },
          "id_card_holder": {
            "type": "string",
            "title": "Id Card Holder",
            "default": "self"
          },
          "is_real_name": {
            "type": "boolean",
            "title": "Is Real Name",
            "default": false
          },
          "front_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Front Image Url"
          },
          "back_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Back Image Url"
          }
        },
        "type": "object",
        "required": [
          "id_card_number"
        ],
        "title": "IDCardInfoBase"
      },
      "IDCardInfoUpdate": {
        "properties": {
          "id_card_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id Card Number"
          },
          "id_card_holder": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id Card Holder"
          },
          "is_real_name": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Real Name"
          },
          "front_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Front Image Url"
          },
          "back_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Back Image Url"
          }
        },
        "type": "object",
        "title": "IDCardInfoUpdate"
      },
      "JsonBody": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "name",
          "password"
        ],
        "title": "JsonBody"
      },
      "LinkUserFollow": {
        "properties": {
          "follower_id": {
            "type": "integer",
            "title": "Follower Id"
          },
          "followed_id": {
            "type": "integer",
            "title": "Followed Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "follower_id",
          "followed_id"
        ],
        "title": "LinkUserFollow"
      },
      "RefreshTokenResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type"
        ],
        "title": "RefreshTokenResponse"
      },
      "SignOutBody": {
        "properties": {
          "csrfToken": {
            "type": "string",
            "title": "Csrftoken"
          },
          "redirectTo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Redirectto"
          }
        },
        "type": "object",
        "required": [
          "csrfToken"
        ],
        "title": "SignOutBody"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type",
          "refresh_token"
        ],
        "title": "Token"
      },
      "TokenWithUser": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          },
          "user": {
            "$ref": "#/components/schemas/UserPublic"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "refresh_token",
          "token_type",
          "user"
        ],
        "title": "TokenWithUser"
      },
      "UpdatePassword": {
        "properties": {
          "current_password": {
            "type": "string",
            "maxLength": 40,
            "minLength": 8,
            "title": "Current Password"
          },
          "new_password": {
            "type": "string",
            "maxLength": 40,
            "minLength": 8,
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "current_password",
          "new_password"
        ],
        "title": "UpdatePassword"
      },
      "User": {
        "properties": {
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "image": {
            "type": "string",
            "title": "Image",
            "default": ""
          },
          "nickname": {
            "type": "string",
            "title": "Nickname",
            "default": ""
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "type": "string",
            "title": "Phone",
            "default": ""
          },
          "age": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Age"
          },
          "followers_count": {
            "type": "integer",
            "title": "Followers Count",
            "default": 0
          },
          "following_count": {
            "type": "integer",
            "title": "Following Count",
            "default": 0
          },
          "last_login": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login"
          },
          "is_superuser": {
            "type": "boolean",
            "title": "Is Superuser",
            "default": false
          },
          "is_staff": {
            "type": "boolean",
            "title": "Is Staff",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "hashed_password": {
            "type": "string",
            "title": "Hashed Password"
          },
          "gender": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gender"
          }
        },
        "type": "object",
        "required": [
          "name",
          "hashed_password"
        ],
        "title": "User"
      },
      "UserCreate": {
        "properties": {
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "image": {
            "type": "string",
            "title": "Image",
            "default": ""
          },
          "nickname": {
            "type": "string",
            "title": "Nickname",
            "default": ""
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "type": "string",
            "title": "Phone",
            "default": ""
          },
          "age": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Age"
          },
          "followers_count": {
            "type": "integer",
            "title": "Followers Count",
            "default": 0
          },
          "following_count": {
            "type": "integer",
            "title": "Following Count",
            "default": 0
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "id_card_info": {
            "$ref": "#/components/schemas/IDCardInfoBase"
          },
          "platform_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserPlatformInfoCreate"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "password",
          "id_card_info"
        ],
        "title": "UserCreate"
      },
      "UserOrTeamFollowMeta": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "nickname": {
            "type": "string",
            "title": "Nickname"
          },
          "image": {
            "type": "string",
            "title": "Image"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "is_following": {
            "type": "boolean",
            "title": "Is Following"
          },
          "is_followed": {
            "type": "boolean",
            "title": "Is Followed"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "nickname",
          "image",
          "email",
          "is_following",
          "is_followed"
        ],
        "title": "UserOrTeamFollowMeta"
      },
      "UserOrTeamFollowMetaList": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/UserOrTeamFollowMeta"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "count",
          "data"
        ],
        "title": "UserOrTeamFollowMetaList"
      },
      "UserPlatformInfoCreate": {
        "properties": {
          "mc_experience": {
            "type": "string",
            "title": "Mc Experience",
            "default": ""
          },
          "play_reason": {
            "type": "string",
            "title": "Play Reason",
            "default": ""
          },
          "server_type": {
            "type": "string",
            "title": "Server Type",
            "default": ""
          },
          "desired_partners": {
            "type": "string",
            "title": "Desired Partners",
            "default": ""
          },
          "favorite_content": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Favorite Content",
            "default": []
          }
        },
        "type": "object",
        "title": "UserPlatformInfoCreate"
      },
      "UserPlatformInfoPublic": {
        "properties": {
          "mc_experience": {
            "type": "string",
            "title": "Mc Experience",
            "default": ""
          },
          "play_reason": {
            "type": "string",
            "title": "Play Reason",
            "default": ""
          },
          "server_type": {
            "type": "string",
            "title": "Server Type",
            "default": ""
          },
          "desired_partners": {
            "type": "string",
            "title": "Desired Partners",
            "default": ""
          },
          "favorite_content": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Favorite Content",
            "default": []
          }
        },
        "type": "object",
        "title": "UserPlatformInfoPublic"
      },
      "UserPlatformInfoUpdate": {
        "properties": {
          "mc_experience": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mc Experience"
          },
          "play_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Play Reason"
          },
          "server_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Server Type"
          },
          "desired_partners": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Desired Partners"
          },
          "favorite_content": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Favorite Content"
          }
        },
        "type": "object",
        "title": "UserPlatformInfoUpdate"
      },
      "UserPublic": {
        "properties": {
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "image": {
            "type": "string",
            "title": "Image",
            "default": ""
          },
          "nickname": {
            "type": "string",
            "title": "Nickname",
            "default": ""
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "type": "string",
            "title": "Phone",
            "default": ""
          },
          "age": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Age"
          },
          "followers_count": {
            "type": "integer",
            "title": "Followers Count",
            "default": 0
          },
          "following_count": {
            "type": "integer",
            "title": "Following Count",
            "default": 0
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "id_card_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IDCardInfoBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "platform_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserPlatformInfoPublic"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "UserPublic"
      },
      "UserUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "image": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image"
          },
          "nickname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nickname"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "age": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Age"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "UsersPublic": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/UserPublic"
            },
            "type": "array",
            "title": "Data"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "data",
          "count"
        ],
        "title": "UsersPublic"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {
              "read_user": "Read self user",
              "write_user": "Write self user",
              "read_users": "Read users",
              "write_users": "Write users",
              "read_proj": "Read 自己的proj(包括私有)",
              "write_team": "Write 团队",
              "write_team_proj": "Write 团队的proj"
            },
            "tokenUrl": "token"
          }
        }
      }
    }
  }
}